@mixin fullscreen() {
  :-webkit-full-screen {
    @content;
  }
  :-moz-full-screen {
    @content;
  }
  :-ms-fullscreen {
    @content;
  }
  _:-ms-fullscreen {
    @content; // for ie 11
  }
  :full-screen {
    @content;
  }
  :fullscreen {
    @content;
  }
}

@mixin input-placeholder {
  &.placeholder { @content; }
  &:-moz-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &:-ms-input-placeholder { @content; }
  &::-webkit-input-placeholder { @content; }
}

@mixin appearance($value) {
  appearance: $value;
  -o-appearance: $value;
  -moz-appearance: $value;
  -webkit-appearance: $value;
}

// position
@mixin position( $pos: null, $top: null, $left: null, $right: null, $bottom: null, $index: null, $translate-center: false, $translate-horizontal: false, $translate-vertical: false) {
	position: $pos;
	@if $translate-center {
		top: 50%;
		left: 50%;
    // @include transform(translate(-50%, -50%));
    transform: translate(-50%, -50%);
	}

	@if $translate-horizontal {
		left: 50%;
    // @include transform(translateX(-50%));
    transform: translateX(-50%);
	}

	@if $translate-vertical {
		top: 50%;
    // @include transform(translateY(-50%));
    transform: translateY(-50%);
	}

  @if $rem-fallback {
    @include rem((
      top: $top,
      left: $left,
      right: $right,
      bottom: $bottom
    ));
  } @else {
    top: $top;
    left: $left;
    right: $right;
    bottom: $bottom;
  }
  z-index: $index;
}

@mixin color-switch($color, $background-color: false, $text-color: false, $border-color: false) {
  @if $background-color {
    background-color: $color;
  }

  @if $text-color {
    color: $color;
  }

  @if $border-color {
    border-color: $color;
  }
}

// spacing
@mixin box($width, $height: $width ) {
  @if $rem-fallback {
    @include rem((
      width: $width,
      height: $height
    ));
  } @else {
    width: $width;
    height: $height
  }
}

@mixin max-width($min-value, $max-value: $min-value) {
  width: $min-value;
  max-width: $max-value;
}

// text truncate
@mixin text-truncate($truncation-boundary) {
  @if $rem-fallback {
    @include rem(max-width, $truncation-boundary);
  } @else {
    max-width: $truncation-boundary;
  }
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin cover-image( $size: null, $url: null) {
	background-size: $size;
	background-repeat: no-repeat;
	background-position: center;
	background-image: $url;
}

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}

@mixin animation ($stuff ) {
  -webkit-animation: $stuff;
  -moz-animation: $stuff;
  -ms-animation: $stuff;
  animation: $stuff;
}

@mixin text-fill-color {
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  text-fill-color: transparent;
}

// @mixin long-shadow($type, $color, $length, $fadeout: true, $skew: false, $direction: right){
//   $shadow: '';
//   @if $skew == false or $type == text{
//     @if $direction == right {
//       @for $i from 0 to $length - 1 {
//         $shadow: $shadow + $i + 'px ' + $i + 'px 0 ' + $color + ',';
//       }
//     }
//     @if $direction == left {
//       @for $i from 0 to $length - 1 {
//         $shadow: $shadow + $i * -1 + 'px ' + $i + 'px 0 ' + $color + ',';
//        }
//       }
//      }

//    @if $fadeout == true{
//     @for $i from 1 to $length - 1 {
//       @if $type == text or $skew == false{
//         @if $direction == right{
//           $shadow: $shadow + $i + 'px ' + $i + 'px 0 ' +       rgba($color, 1 - $i / $length) + ',';
//         }
//         @if $direction == left{
//           $shadow: $shadow + $i * -1 + 'px ' + $i + 'px 0 ' +       rgba($color, 1 - $i / $length) + ',';
//         }
//       }
//       @if ($type == box) and $skew == true{
//         @if $direction == right {
//           $shadow: $shadow + $i + 'px ' + $i + 'px 0 ' + $i * .2 + 'px ' + rgba($color, 1 - $i / $length) + ',';
//         }
//         @if $direction == left {
//           $shadow: $shadow + $i * -1 + 'px ' + $i + 'px 0 ' + $i * .2 + 'px ' + rgba($color, 1 - $i / $length) + ',';
//         }
//       }
//   }
//   $shadow: $shadow + $length + 'px ' + $length + 'px 0 ' + rgba($color, 0);
//  }
//  @if $fadeout == false{
//    @if $skew == true and ( $type == box ){
//      @for $i from 0 to $length - 1 {
//             $shadow: $shadow + $i + 'px ' + $i + 'px 0 ' + $i * .1 + 'px ' + $color + ',';
//       }
//    }
//     $shadow: $shadow + $length + 'px ' + $length + 'px 0 ' + rgba(0,0,0,0);
//  }
//  $shadow: unquote($shadow);
//   @if $type == 'box' {box-shadow: $shadow;}
//   @if $type == 'text' {text-shadow: $shadow;}
// }
